server:
  port: 8000
  
spring:
  application:
    name: identityaccess-microservice
    
#  cloud:
#    config:
#      uri: http://localhost:8888
#      
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: admin
#    password: password


#  security:
#    user:
#      name: user
#      password: pwd
      
#security:
#    oauth2:
#      client:
#        client-id : clientid # OAuth2 client id.
#        client-secret: clientsecret # OAuth2 client secret. A random secret is generated by default  

## SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)
#security:
#  oauth2:
##    client: 
##      client-id : clientid # OAuth2 client id.
##      client-secret: clientsecret # OAuth2 client secret. A random secret is generated by default
#
## SECURITY OAUTH2 RESOURCES (ResourceServerProperties)
#    resource:
#      id: user-microservice # Identifier of the resource.
#      jwt:
#        #key-uri: token_key # The URI of the JWT token. Can be set if the value is not available and the key is public.
#        key-value: "hello" # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.
#      #jwk:  
#        #key-set-uri: # The URI for getting the set of keys that can be used to validate the token.
#      prefer-token-info: false # Use the token info, can be set to false to use the user info.
#      service-id: user-microservice #
#      token-info-uri: /check_token # URI of the token decoding endpoint.
#      #token-type: # The token type to send when using the userInfoUri. Default is Bearer
#      user-info-uri: /me # URI of the user endpoint.
#
## SECURITY OAUTH2 SSO (OAuth2SsoProperties)
#    #sso:
#    #  login-path: /login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server    
 